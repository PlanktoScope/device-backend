[tool.poetry]
name = "planktoscope-controller"
# Note: PEP 440 requires pre-releases to be formatted like "2023.7.0b0" rather than
# "2023.7.0-beta.0", which is different from the Semantic Versioning schema
version = "2024.0.0a0"
description = "Controller of PlanktoScope hardware"
# For simplicity, we follow the definition of "Maintainer" from
# https://opensource.guide/how-to-contribute/#anatomy-of-an-open-source-project , which says:
# "Maintainers: Contributors who are responsible for driving the vision and managing the
# organizational aspects of the project".
# Here, we only list the current maintainers of the PlanktoScope backend software.
maintainers = [
  "Ethan Li <lietk12@gmail.com>",
]
# For simplicity, we follow the definition of "Author" from
# https://opensource.guide/how-to-contribute/#anatomy-of-an-open-source-project , which says:
# "Author: The person/s or organization that created the project".
# Here, we only list the authors of the PlanktoScope backend software.
authors = [
  "Romain Bazile <romain@oceantrotter.org>",
]
license = "GPL-3.0-or-later"
readme = "README.md"
homepage = "https://www.planktoscope.org"
repository = "https://github.com/PlanktoScope/device-backend"
# FIXME: once we have the docs up at docs.fairscope.com, we should update this URL
documentation = "https://planktoscope.github.io/PlanktoScope/"
keywords = ["planktoscope"]
classifiers = [
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Topic :: Scientific/Engineering",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "pypi"
priority = "supplemental"

[[tool.poetry.source]]
name = "piwheels"
url = "https://www.piwheels.org/simple/"
priority = "primary"

[tool.poetry.group.dev.dependencies]
black = "^24.2.0"
poethepoet = "^0.25.0"
pylama = {extras = ["all", "toml"], version = "^8.4.1"}

[tool.poetry.group.hw.dependencies]
rpi-gpio = "~0.7.1a4"
adafruit-blinka = "~8.19.0"
adafruit-circuitpython-motorkit = "~1.6.3"
adafruit-circuitpython-motor = "~3.3.1"
adafruit-ssd1306 = "~1.6.2"
adafruit-platformdetect = "~3.45.2"
picamerax = "~21.9.8"
smbus2 = "~0.4.1"
picamera = "~1.13"
picamera2 = "==0.3.10"
# Note: av is required by picamera2; v10.0.0 is the latest version available on piwheels for bullseye, while v11.0.0 is only for bookworm
av = "~10.0.0"

[tool.poetry.dependencies]
python = ">=3.9.2"
paho-mqtt = [
  { version = "==1.6.1", source = "pypi", markers = "platform_machine != 'armv7l'" },
  { version = "==1.6.1", source = "piwheels", markers = "platform_machine == 'armv7l'" },
]
loguru = [
  { version = "==0.5.3", source = "pypi", markers = "platform_machine != 'armv7l'" },
  { version = "==0.5.3", source = "piwheels", markers = "platform_machine == 'armv7l'" },
]

[tool.black]
include = '''
# We are gradually introducing autoformatting as we rewrite each module. For now, we will only
# autoformat the new imager module:
(
    adafruithat\/planktoscope\/imagernew\/.*\.pyi?$
  | pscopehat\/planktoscope\/imagernew\/.*\.pyi?$
)
'''
line-length = 100

[tool.pylama]
skip='adafruithat/main.py,adafruithat/planktoscope/__init__.py,adafruithat/planktoscope/display.py,adafruithat/planktoscope/identity.py,adafruithat/planktoscope/integrity.py,adafruithat/planktoscope/light.py,adafruithat/planktoscope/mqtt.py,adafruithat/planktoscope/stepper.py,adafruithat/planktoscope/uuidName.py,adafruithat/planktoscope/imager/*,pscopehat/main.py,pscopehat/main_thread.py,pscopehat/shush/*,pscopehat/planktoscope/__init__.py,pscopehat/planktoscope/display.py,pscopehat/planktoscope/identity.py,pscopehat/planktoscope/integrity.py,pscopehat/planktoscope/light.py,pscopehat/planktoscope/module.py,pscopehat/planktoscope/mqtt.py,pscopehat/planktoscope/stepper.py,pscopehat/planktoscope/uuidName.py,pscopehat/planktoscope/imager/*'

[tool.pylama.linter.pycodestyle]
max_line_length = 100

[tool.pylama.linter.pylint]
max_line_length = 100

[tool.poe.tasks]
fmt = "black ."
check-fmt = "black --diff --color ."
lint = "pylama"
check = ["check-fmt", "lint"]
